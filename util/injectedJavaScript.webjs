function updateScrollPercentageToQueryParam() {
    const element = document.getElementById("chapters");
    let scrollPercentage;

    if (element) {
        const rect = element.getBoundingClientRect();

        const viewportTop = window.scrollY || window.pageYOffset;

        const elementAbsoluteTop = viewportTop + rect.top;
        const elementHeight = rect.height;

        if (elementHeight === 0) {
            return 0;
        }

        const scrollDistanceIntoElement = viewportTop - elementAbsoluteTop;

        let progress = 0;
        if (scrollDistanceIntoElement <= 0) {
            progress = 0;
        } else if (scrollDistanceIntoElement >= elementHeight) {
            progress = 100;
        } else {
            progress = (scrollDistanceIntoElement / elementHeight) * 100;
        }

        scrollPercentage = Math.max(0, Math.min(100, progress));
    }

    if (Number.isNaN(scrollPercentage)) {
        return;
    }

    const roundedScrollPercentage = Math.floor(scrollPercentage).toString();

    const url = new URL(window.location.href);

    const currentPercentage = url.searchParams.get("scroll");

    if (
        currentPercentage !== null &&
        currentPercentage === roundedScrollPercentage
    ) {
        return;
    }

    url.searchParams.set("scroll", roundedScrollPercentage);

    window.history.replaceState({}, "", url.toString());
}

window.addEventListener("scroll", updateScrollPercentageToQueryParam);

const url = new URL(window.location.href);

const urlParts = url.pathname.split("/").filter(Boolean);

if (urlParts.includes("works") && urlParts.includes("chapters")) {
    window.ReactNativeWebView.postMessage(
        JSON.stringify({
            type: "workInfo",
            url: window.location.href,
            workName: document.querySelector("#workskin h2.title.heading")?.innerText,
            workLastUpdated: document.querySelector(".work.meta.group .stats dd.status")?.innerText,
            chapterName: document.querySelector(
                "#chapters div.chapter div.chapter.preface.group h3.title",
            )?.innerText,
            chapterNumber: document.querySelector("#chapters div.chapter")?.id,
            totalChapters: document.querySelector(
                ".work.meta.group .stats dd.chapters",
            )?.innerText,
            authorUrl: document.querySelector("#workskin .byline.heading a")?.href,
        }),
    );
}

